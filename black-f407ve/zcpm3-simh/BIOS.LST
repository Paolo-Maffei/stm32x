Z80ASM SuperFast Relocating Macro Assembler     	    Z80ASM 1.32 Page   1
BIOS    Z80

    1                   ; Minimal CPM Plus BIOS -jcw, 2018-11-16
    2                   
    3         0003      drives	equ	3		; number of drives supported
    4         FFFF      true	equ	-1
    5         0000      false	equ	not true
    6                   
    7                   	maclib	DEFS.LIB	; file name must be upper case!
    8                   				; defines, banked, nhdisks and expcom
    9                   
   10                   ; BDOS calls -------------------------------------------------------------------
   11                   
   12         0001      getch		equ	1		; BDOS function
   13         0009      print		equ	9		; BDOS function
   14         000F      open		equ	15		; BDOS function
   15         0014      readseq		equ	20		; BDOS function
   16         001A      dma		equ	26		; BDOS function
   17         002C      multisec	equ	44		; BDOS function
   18                   
   19                   ; low memory -------------------------------------------------------------------
   20                   
   21         0003      iobyte  equ 0003h   ; Intel standard I/O definition byte
   22         0004      usrdrv  equ 0004h   ; Current user number and drive
   23         0005      bdos	equ 0005h   ; bdos entry point
   24         0080      tpabuf  equ 0080h   ; Default I/O buffer and command line storage
   25         0100      ccp     equ 0100h   ; ccp load and start address
   26                   
   27                   ;	external references
   28                   	extrn	@civec, @covec, @aovec, @aivec, @lovec, @bnkbf
   29                   	extrn	@crdma, @crdsk,	@fx, @resel, @vinfo, @usrcd
   30                   	extrn	@ermde, @date, @hour, @min, @sec, @mxtpa
   31                   
   32                   	cseg
   33                   
   34                   ; BIOS jump table --------------------------------------------------------------
   35                   
   36 0000' C3 0096'    	jp boot     ;  0 Initialize
   37 0003' C3 009A'    wboote: jp wboot    ;  1 Warm boot
   38 0006' C3 011A'    	jp conist   ;  2 Console status
   39 0009' C3 011D'    	jp conin    ;  3 Console input
   40 000C' C3 0120'    	jp conout   ;  4 Console OUTput
   41 000F' C3 0185'    	jp list     ;  5 List OUTput
   42 0012' C3 0185'    	jp punch    ;  6 punch OUTput
   43 0015' C3 0123'    	jp reader   ;  7 Reader input
   44 0018' C3 013D'    	jp home     ;  8 Home disk
   45 001B' C3 0126'    	jp seldsk   ;  9 Select disk
   46 001E' C3 013F'    	jp settrk   ; 10 Select track
   47 0021' C3 0144'    	jp setsec   ; 11 Select sector
   48 0024' C3 0149'    	jp setdma   ; 12 Set DMA ADDress
   49 0027' C3 0151'    	jp read     ; 13 Read 128 bytes
   50 002A' C3 0155'    	jp write    ; 14 Write 128 bytes
   51 002D' C3 0185'    	jp listst   ; 15 List status
   52 0030' C3 014E'    	jp sectrn   ; 16 Sector translate
   53 0033' C3 0186'    	jp conost	; return console output status
   54 0036' C3 0186'    	jp auxist	; return aux device input status
   55 0039' C3 0186'    	jp auxost	; return aux device output status
   56 003C' C3 0185'    	jp devtbl	; return address of character i/o table
   57 003F' C3 0185'    	jp devini	; init character i/o devices
   58 0042' C3 0177'    	jp drvtbl	; return address of disk drive table
Z80ASM SuperFast Relocating Macro Assembler     	    Z80ASM 1.32 Page   2
BIOS    Z80

   59 0045' C3 0185'    	jp multio	; set number of consec. sec. to read/write
   60 0048' C3 0185'    	jp flush	; flush user [de]blocking buffers
   61 004B' C3 0172'    	jp move		; copy memory to memory
   62 004E' C3 0185'    	jp time		; signal time and date operation
   63 0051' C3 017B'    	jp selmem	; select memory bank
   64 0054' C3 0181'    	jp setbnk	; set bank for next dma
   65 0057' C3 0185'    	jp xmove	; set banks for next move
   66 005A' C3 0000     	jp 0		; reserved for future expansion
   67 005D' C3 0000     	jp 0		; reserved for future expansion
   68 0060' C3 0000     	jp 0		; reserved for future expansion
   69                   
   70                   ; Disk Parameter Headers -------------------------------------------------------
   71                   
   72 0063' 0000" 0019" drvtab: dw dph0,dph1,dph2,0,0,0,0,0,0,0,0,0,0,0,0,0,0
   73                   
   74                           dseg
   75                   
   76 0000" 0000  0000  dph0:	dw 0,0,0,0,0,0,dpb,0,0FFFEh,0FFFEh,0FFFFh,0FFFFh
   77 0018" 00                  db 0
   78                   
   79 0019" 0000  0000  dph1:	dw 0,0,0,0,0,0,dpb,0,0FFFEh,0FFFEh,0FFFFh,0FFFFh
   80 0031" 00                  db 0
   81                   
   82 0032" 0000  0000  dph2:	dw 0,0,0,0,0,0,dpb,0,0FFFEh,0FFFEh,0FFFFh,0FFFFh
   83 004A" 00                  db 0
   84                   
   85                           cseg
   86                   
   87 0085' 001A        dpb:	dw 26      ; SPT - sectors per track
   88 0087' 03          	db 3       ; BSH - block shift factor
   89 0088' 07          	db 7       ; BLM - block mask
   90 0089' 00          	db 0       ; EXM - Extent mask
   91 008A' 00F2        	dw 242     ; DSM - Storage size (blocks - 1)
   92 008C' 003F        	dw 63      ; DRM - Number of directory entries - 1
   93 008E' C0          	db 192     ; AL0 - 1 bit set per directory block
   94 008F' 00          	db 0       ; AL1 - ... 8 more bits
   95 0090' 8000        	dw 8000h   ; CKS - DIR check vector size (DRM+1)/4 (8000h=fixed disk)
   96 0092' 0002        	dw 2       ; OFF - Reserved tracks
   97 0094' 00                  db 0       ; PSH - physical record shift
   98 0095' 00                  db 0       ; PSM - physical record mask
   99                   
  100                   ; Cold & Warm Boot -------------------------------------------------------------
  101                   
  102 0096' 06 01       boot:	ld b,1
  103 0098' 18 02               jr wboot1
  104                   
  105 009A' 06 00       wboot:	ld b,0
  106 009C' F3          wboot1: di
  107 009D' 31 0212'    	ld sp,bstack
  108                   
  109         FFFF          if	banked
  110 00A0' 3E C0               ld a,0C0h
  111 00A2' DB 06               in a,(6) ; set memory split at 0C000h
  112 00A4' 3E 01       	ld a,1
  113 00A6' CD 017B'    	call selmem
  114                       endif
  115                   
  116 00A9' 21 0080     	ld hl,tpabuf            ; Address of BIOS DMA buffer
Z80ASM SuperFast Relocating Macro Assembler     	    Z80ASM 1.32 Page   3
BIOS    Z80

  117 00AC' 22 0206'    	ld (dmaadr),hl
  118                   
  119 00AF' 3E C3       	ld a,0C3h
  120 00B1' 21 0003'    	ld hl,wboote
  121 00B4' 32 0000     	ld (0000h),a
  122 00B7' 22 0001     	ld (0001h),hl
  123 00BA' 2A 0000#    	ld hl,(@mxtpa)
  124 00BD' 32 0005     	ld (0005h),a
  125 00C0' 22 0006     	ld (0006h),hl
  126                           
  127 00C3' 78          	ld	a,b
  128 00C4' B7          	or	a
  129 00C5' CA 00CD'    	jp	z,ldccp		; no message on warm boot
  130 00C8' 11 0188'    	ld	de,greet	; print version information
  131 00CB' DB 03       	in a,(3)
  132                   
  133                   ;	load ccp.com into tpa
  134                   ;
  135 00CD'             ldccp:
  136                           ; FIXME: load CCP from file or system track
  137                   
  138 00CD' AF          	xor	a
  139 00CE' 32 01B2'    	ld	(ccpfcb+15),a	; zero extent
  140 00D1' 21 0000     	ld	hl,0
  141 00D4' 22 01C3'    	ld	(fcbnr),hl	; start at beginning of file
  142 00D7' 11 01A3'    	ld	de,ccpfcb
  143 00DA' 0E 0F       	ld	c,open
  144 00DC' CD 0005     	call	bdos		; open file containing ccp
  145 00DF' 11 01C6'    	ld	de,opnmsg
  146 00E2' 3C          	inc	a
  147 00E3' CA 0105'    	jp	z,prterr	; error if file not found
  148 00E6' 11 0100     	ld	de,ccp
  149 00E9' 0E 1A       	ld	c,dma
  150 00EB' CD 0005     	call	bdos		; start of tpa
  151 00EE' 11 0080     	ld	de,128
  152 00F1' 0E 2C       	ld	c,multisec
  153 00F3' CD 0005     	call	bdos		; allow up to 16k bytes
  154 00F6' 11 01A3'    	ld	de,ccpfcb
  155 00F9' 0E 14       	ld	c,readseq
  156 00FB' CD 0005     	call	bdos		; load the thing
  157 00FE' 11 01E1'    	ld	de,iomsg
  158 0101' 3C          	inc	a
  159 0102' C2 0100     	jp	nz,ccp
  160 0105' CD 010E'    prterr:	call	printf		; print the complaint
  161 0108' 0E 01       	ld	c,getch
  162 010A' CD 0005     	call	bdos		; wait for any key
  163                   	;jp	coldboot	; attempt cold boot
  164 010D' 76                  halt
  165                   
  166 010E' 0E 09       printf:	ld	c,print
  167 0110' C3 0005     	jp	bdos
  168                   
  169 0113' 3A 0004     	ld a,(usrdrv)           ; Save new drive number (0)
  170 0116' 4F          	ld c,a                  ; Pass drive number in C
  171 0117' C3 0100     	jp 0100h                ; Start CP/M by jumping to the CCP
  172                   
  173                   ; Console I/O ------------------------------------------------------------------
  174                   
Z80ASM SuperFast Relocating Macro Assembler     	    Z80ASM 1.32 Page   4
BIOS    Z80

  175 011A' DB 00       conist:	in a,(0)
  176 011C' C9          	ret
  177                   
  178 011D' DB 01       conin:	in a,(1)
  179 011F' C9          	ret
  180                   
  181 0120' DB 02       conout:	in a,(2)
  182 0122' C9          	ret
  183                   
  184 0123' 3E 1A       reader:	ld a,1Ah
  185 0125' C9          	ret
  186                   
  187                   ; Disk I/O ---------------------------------------------------------------------
  188                   
  189 0126' 21 0000     seldsk:	ld	hl,0		; bad drive
  190 0129' 79          	ld	a,c		; drive request
  191 012A' 32 0203'    	ld	(sekdsk),a
  192 012D' FE 03       	cp	drives
  193 012F' D0          	ret	nc		; exit if no space alloc for drive
  194 0130' 69          	ld	l,c
  195 0131' 26 00       	ld	h,0
  196 0133' 29          	add	hl,hl		; create index from drive code
  197 0134' 01 0063'    	ld	bc,drvtab
  198 0137' 09          	add	hl,bc		; get pointer to dispatch table
  199 0138' 7E          	ld	a,(hl)
  200 0139' 23          	inc	hl
  201 013A' 66          	ld	h,(hl)
  202 013B' 6F          	ld	l,a		; point at disk descriptor
  203 013C' C9          	ret
  204                   
  205 013D' 0E 00       home:	ld c,0
  206 013F' 79          settrk: ld a,c
  207 0140' 32 0205'    	ld (seksat+1),a
  208 0143' C9                  ret
  209                   
  210 0144' 21 0204'    setsec: ld hl,seksat
  211 0147' 71                  ld (hl),c
  212 0148' C9                  ret
  213                   
  214 0149' ED 43 0206' setdma: ld (dmaadr),bc
  215 014D' C9                  ret
  216                   
  217 014E' 69          sectrn: ld l,c
  218 014F' 60          	ld h,b
  219 0150' C9                  ret
  220                   
  221 0151' 06 01       read:	ld b,1
  222 0153' 18 02               jr rdwr
  223 0155' 06 81       write:	ld b,1+80h
  224 0157'             rdwr:   
  225         FFFF          if banked
  226 0157' 3A 0209'            ld a,(crwbk)
  227 015A' DB 07               in a,(7)
  228                       endif
  229 015C' 3A 0203'            ld a,(sekdsk)
  230 015F' D5                  push de
  231 0160' ED 5B 0204'         ld de,(seksat)
  232 0164' 2A 0206'            ld hl,(dmaadr)
Z80ASM SuperFast Relocating Macro Assembler     	    Z80ASM 1.32 Page   5
BIOS    Z80

  233 0167' DB 04               in a,(4)
  234 0169' D1                  pop de
  235         FFFF          if banked
  236 016A' F5                  push af
  237 016B' 3A 0208'            ld a,(cbank)
  238 016E' DB 07               in a,(7)
  239 0170' F1                  pop af
  240                       endif
  241 0171' C9          	ret
  242                   
  243 0172' EB          move:	ex	de,hl
  244 0173' ED B0       	ldir
  245 0175' EB          	ex	de,hl
  246 0176' C9          	ret
  247                   
  248 0177' 21 0063'    drvtbl:	ld	hl,drvtab
  249 017A' C9          	ret
  250                   
  251         FFFF          if	banked
  252 017B' 32 0208'    selmem:	ld (cbank),a	; update current bank
  253 017E' DB 07       	in a,(7)
  254 0180' C9                  ret
  255 0181' 32 0209'    setbnk:	ld (crwbk),a
  256 0184' C9          	ret
  257                       else
  260                       endif
  261                   
  262 0185'             devtbl:
  263 0185'             devini:
  264 0185'             flush:
  265 0185'             time:
  266 0185'             xmove:
  267 0185'             listst:
  268 0185'             list:
  269 0185'             punch:
  270 0185'             multio:
  271 0185' C9          	ret
  272                   
  273 0186'             conost:
  274 0186'             auxist:
  275 0186'             auxost:
  276 0186' AF          	xor a
  277 0187' C9                  ret
  278                   
  279                   ; Data area --------------------------------------------------------------------
  280                   
  281 0188' 0D 0A 43 50 greet:  db 13,10,'CP/M vers 3.0 ('
  282         0000          if not banked
  284                       endif
  285 0199' 62 61 6E 6B         db 'banked)',13,10,0
  286                   
  287 01A3' 01 43 43 50 ccpFCB:	db	1,'CCP     COM',0,0,0,0
  288 01B3' 00 00 00 00 	db	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  289 01C3' 00 00 00    fcbNr:	db	0,0,0
  290 01C6' 0D 0A 42 49 opnmsg:	db	13, 10, 'BIOS can''t open CCP.COM ',0
  291 01E1' 0D 0A 42 49 iomsg:	db	13, 10, 'BIOS I/O error reading CCP.COM ',0
  292                   
  293 0203'   0001      sekdsk: ds 1   ; seek disk number
Z80ASM SuperFast Relocating Macro Assembler     	    Z80ASM 1.32 Page   6
BIOS    Z80

  294 0204'   0002      seksat: ds 2   ; seek sector and track number
  295 0206'   0002      dmaadr: ds 2   ; last dma address
  296                   
  297 0208'   0001      cbank:  ds 1   ; current bank
  298 0209'   0001      crwbk:  ds 1   ; desired bank for read/write
  299                   
  300 020A'   0008      	ds 8
  301         0212'     bstack  equ $
  302                   
  303                   ; ------------------------------------------------------------------------------
  304                   
  305                           end
 0 Error(s) Detected. 530 Program Bytes. 75 Data Bytes.
 87 Symbols Detected.
ram Bytes. 75 Data Bytes.
 86 Symbols Detected.
